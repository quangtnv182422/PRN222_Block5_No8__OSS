@using OSS_Main.Models.Entity
@model List<Feedback>
@{
    var totalPages = ViewBag.TotalPages as int? ?? 1;
    var currentPage = ViewBag.CurrentPage as int? ?? 1;
    var sort = ViewBag.Sort as string ?? "newest";
    var productId = ViewBag.ProductId as int? ?? 0;
}
<style>
    .pagination {
        display: flex;
        flex-wrap: nowrap;
        overflow-x: auto;
    }

</style>
@if (!Model.Any())
{
    <p>No reviews yet. Be the first to leave one!</p>
}
else
{
    foreach (var fb in Model)
    {
        <div class="d-flex mb-4 border-bottom pb-3">
            <img src="~/img/avatar.jpg" class="img-fluid rounded-circle me-3" style="width: 80px; height: 80px;" alt="Avatar" />
            <div>
                <div class="d-flex justify-content-between">
                    <h5 class="mb-1 me-auto">@fb.Customer?.UserName</h5>
                    <small class="text-muted">@fb.CreatedAt.ToString("dd MMM yyyy")</small>
                </div>
                <div class="mb-2">
                    @for (int i = 1; i <= 5; i++)
                    {
                        if (i <= fb.RatedStar)
                        {
                            <i class="fa fa-star text-warning"></i>
                        }
                        else
                        {
                            <i class="fa fa-star text-silver"></i>
                        }
                    }
                </div>
                <p class="mb-2">@fb.FeedbackContent</p>

                @if (fb.Medias != null && fb.Medias.Any(m => m.MediaType == MediaType.Image))
                {
                    <div class="d-flex flex-wrap">
                        @foreach (var media in fb.Medias.Where(m => m.MediaType == MediaType.Image))
                        {
                            <img src="@media.Url" class="img-thumbnail me-2 mb-2" style="width: 120px;" alt="Feedback Image" />
                        }
                    </div>
                }
            </div>
        </div>
    }
    <nav class="mt-3">
        <ul class="pagination justify-content-center">
            @for (int i = 1; i <= totalPages; i++)
            {
                <li class="page-item @(i == currentPage ? "active" : "")">
                    <button class="page-link" onclick="loadFeedbackPage(@productId, '@sort', @i)">@i</button>
                </li>
            }
        </ul>
    </nav>
}
<script>
    function loadFeedbackPage(productId, sort, page) {
        fetch(`/Products/GetSortedFeedback?productId=${productId}&sort=${sort}&page=${page}`)
            .then(res => res.text())
            .then(html => {
                document.getElementById('feedback-container').innerHTML = html;
            });
    }

    document.getElementById('sortSelect').addEventListener('change', function () {
        const sort = this.value;
        const productId = '@productId';
        loadFeedbackPage(productId, sort, 1); // reset về trang 1 khi đổi sort
    });
</script>

